#         ____      __    ___ __
#        / /| |     | |  / _(_) |
#       / /_| | ___ | |_| |_ _| | ___  ___
#      / / _` |/ _ \| __|  _| | |/ _ \/ __|
#     / / (_| | (_) | |_| | | | |  __/\__ \
#    / /\__,_|\___/ \__|_| |_|_|\___||___/
#
# TURN BACK NOW.  YOU HAVE BEEN WARNED.

# Shell config
export LANG=en_US.UTF-8
export LESSCHARSET=utf-8
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export PYTHONIOENCODING=UTF-8

export EDITOR=bbedit
export BUNDLER_EDITOR=bbedit
export GREP_OPTIONS='--color=auto' # Enable colored grep output.
export MANPAGER='less -X' # Don’t clear the screen after quitting a manual page.
export LT_HOME="/Applications"

# Avoid issues with `gpg` as installed via Homebrew https://stackoverflow.com/a/42265848/96656
export GPG_TTY=$(tty);

# Make less more awesome
export LESS_TERMCAP_mb=$'\E[01;31m' # begin blinking
export LESS_TERMCAP_md=$'\E[0;34m' # begin bold
export LESS_TERMCAP_me=$'\E[0m' # end bold
export LESS_TERMCAP_so=$'\E[01;40;33m' # begin standout mode
export LESS_TERMCAP_se=$'\E[0m' # end standout mode
export LESS_TERMCAP_us=$'\E[0;36m' #begin underline
export LESS_TERMCAP_ue=$'\E[0m' # end underline

# Don’t clear the screen after quitting a manual page.
export MANPAGER='less -X';


#
# HISTORY HANDLING

export HISTCONTROL=erasedups                         # Erase duplicates
export HISTSIZE=500000 # Much history
export HISTFILESIZE=100000 # Such size of it
export HISTTIMEFORMAT='%F %T ' # Useful timestamp format
export PS4='+\t ' # Place timestamp before debug output
export PROMPT_COMMAND="history -a; $PROMPT_COMMAND"       # Make new shells get the history lines from all previous s/hells
shopt -s histappend                                       # Append to the history file rather then overwriting it
shopt -s dotglob                                          # Include filenames beginning with a "." in the filename expansion.
shopt -s cmdhist                                          # Save all lines of a multiple-line command in the same history entry.
shopt -s cdspell                                          # Autocorrect typos in path names when using the `cd` command.
shopt -s checkwinsize                                     # Check and update the window size after each command
shopt -s nocaseglob                                       # Match filenames in a case-insensitive fashion when performing filename expansion.

if [ -d /usr/local/opt/coreutils ]; then
export PATH="$HOME/bin:/usr/local/opt/coreutils/libexec/gnubin:$PATH"
else
  export PATH="$HOME/bin:$PATH"
fi

if [ -d ~/.bash_aliases ]; then
  . ~/.bashrc_aliases
fi

if [ -d ~/.bash_prompt ]; then
  . ~/.bashrc_prompt
  export PS1="\[\e[0;32m\]\]\[\] \[\e[1;32m\]\]\t \[\e[0;2m\]\]\w \[\e[0m\]\]\[$\] "
else
  export PS1="\[\e[0;32m\]\]\[\] \[\e[1;32m\]\]\t \[\e[0;2m\]\]\w \[\e[0m\]\]\[$\] "
fi

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
#  export TERM='xterm-256color';
  export PS1="$bashPrompt";
fi

# Check if this if we are logged in via ssh
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  export SESSION_TYPE=ssh
else
  case $(ps -o comm= -p $PPID) in
    sshd|*/sshd) export SESSION_TYPE=ssh;;
  esac
fi

#
# JavaScript
if [ -d /usr/local/bin/node ]; then
  export NODE_REPL_HISTORY=~/.node_history; # Enable persistent REPL history for `node`
  export NODE_REPL_HISTORY_SIZE='32768'; # Allow 32³ entries; the default is 1000
  export NODE_REPL_MODE='sloppy'; # Use sloppy mode by default, matching web browsers
fi

#
# GO Language
if [ -d /usr/local/opt/go ]; then
  export GOPATH="$HOME/go_modules"
  export PATH=$PATH:$GOPATH/bin:/usr/local/opt/go/libexec/bin
fi

#
# Python
PYTHONPATH="/Library/Python/current/site-packages:/System/Library/Frameworks/Python.framework/Versions/current/lib:/System/Library/Frameworks/Python.framework/Versions/current/lib/python2.7:/System/Library/Frameworks/Python.framework/Versions/current/Extras/lib/python:/System/Library/Frameworks/Python.framework/Versions/current/lib/python2.7/lib-dynload:/System/Library/Frameworks/Python.framework/Versions/current/lib/python2.7/lib-dynload"
#fi

# Python v3
if [ -d /usr/local/bin/pip3 ]; then
  export PATH="/usr/local/opt/sqlite/bin:$PATH"          # Add BREW related sqlite3 - macOS provides an older version
fi

#
# Ruby
if [ -d "$HOME/.rvm/bin" ]; then
  export PATH="$PATH:$HOME/.rvm/bin"          # Add RVM to PATH for scripting
#  source "$HOME/.rvm/scripts/rvm"             # Load RVM into a shell session *as a function*
fi

#
# MAC Postgres.app                            # Please refer to /etc/paths.d
# http://postgresapp.com/
#if [ -d /Applications/Postgres.app/Contents/Versions/latest/bin ]; then
#  export PATH="$PATH:/Applications/Postgres.app/Contents/Versions/latest/bin"
#fi


export PS1="\[\e[0;32m\]\]\[\] \[\e[1;32m\]\]\t \[\e[0;2m\]\]\w \[\e[0m\]\]\[$\] "
