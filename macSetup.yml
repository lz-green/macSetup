---
- hosts:  localhost
  vars_files:
    - macSoftware.yml

  tasks:  
  
    - debug: msg="** macSetup ansible installation }} **"
      tags: ['setup', 'dev']
      
    - name: Display all variables/facts known for a host
      debug: var=hostvars[inventory_hostname] verbosity=1
      tags: ['setup', 'dev']
      
    - name: Display all homebrew taps used by this installation
      debug: msg="{{ brew_tap }}"verbosity=1
      tags: ['setup', 'dev']
    
    - name: Clone or update local macSetup repository
      git: repo=https://github.com/bhdicaire/macSetup.git dest=/tmp/macSetup force=yes update=yes
      tags: ['setup']

    - file: path=/tmp/macSetup state=directory mode=0777
      tags: ['setup']
      
    - name: Copy opiniated bash, color palettes, git and services configuration
      file: path='{{ home }}{{ item }}' state=directory owner=bhdicaire group=staff mode=0751
      with_items:
        - "/bin/"
        - "/.gitconfig/"
        - "/Dropbox/"
      tags: ['setup']
      
    - file: path='{{ home }}/.ssh/' state=directory mode=0700
      tags: ['setup']
      
    - copy: src='/tmp/macSetup/bin/' dest='{{ home }}/bin/' mode=0751 directory_mode=yes
      tags: ['setup']
      
    - copy: src='{{ item.src }}' dest='{{ item.dest }}' mode=651
      with_items:       
        - { src: '/tmp/macSetup/colors/', dest: '{{ home }}/Library/Colors/' }
        - { src: '/tmp/macSetup/services/', dest: '{{ home }}//Library/Services/' }
      tags: ['setup']
      
      copy: src='/tmp/macSetup/dot/{{ item }}' dest='{{ home }}/.{{ item }}' mode=651
      with_items:
        - bash_aliases
        - bash_functions
        - bash_profile
        - bash_prompt
        - bashrc
        - curlrc
        - gitconfig
        - gitignore
        - inputrc
        - screenrc
        - vimrc
        - wgetrc
      tags: ['setup']
      
    - name: DEV setup
      file: path='{{ home }}/Dropbox/{{ item }}' state=directory owner=bhdicaire group=staff mode=0751
      with_items:
        - "@Inbox"
        - "@Medium"
        - "@Tarmac"
        - "GIT"
        - "Code"
        - "@W3"
      tags: ['dev']
        
    - name: Symbolic link
      file: src='{{ home }}/Dropbox/{{ item }}' dest='{{ home }}/{{ item }}' state=link
      with_items:
        - "@Inbox"
        - "@Medium"
        - "@Tarmac"
        - "GIT"
        - "Code"
        - "@W3"
      tags: ['dev']
    
    - name: Install applications with homebrew
      homebrew: update_homebrew=yes upgrade_all=yes
      tags: ['setup', 'dev']
      
    - shell: brew cleanup
      tags: ['setup', 'dev']
      
    - homebrew_tap: name="{{ item }}" state=present
      with_items:
        - "{{ brew_tap }}"
      tags: ['setup']

    - homebrew: name="{{ item }}" state=present
      with_items:
        - "{{ brew_app }}"
      tags: ['setup']
  
    - homebrew: name="{{ item }}" state=present
      with_items:
        - "{{ brew_dev }}"
      tags: ['dev']

    - shell: brew cleanup
      tags: ['setup', 'dev']
       
    - homebrew_cask: name="{{ item }}" path="{{ brew_cask_appdir }}" state=present
      with_items:
        - "{{ brew_cask }}"
      tags: ['setup']
  
    - homebrew_cask: name="{{ item }}" path="{{ brew_cask_appdir }}" state=present
      with_items:
        - "{{ brew_cask_dev }}"
      tags: ['dev'] 

    - shell: brew cask cleanup
      tags: ['setup', 'dev']
    
    - name: Get MAS account status
      shell: 'mas account'
      register: mas_account_result
      failed_when: mas_account_result.rc > 1
      changed_when: false
      tags: ['setup']
   
    - name: List installed MAS apps.
      command: mas list
      register: mas_list
      always_run: yes
      changed_when: false
      tags: ['setup'] 
      
    - name: Ensure configured MAS apps are installed.
      command: mas install "{{ item.id|default(item) }}"
      with_items: "{{ mas_installed_apps + mas_installed_app_ids }}"
      when: "'{{ item.id|default(item) }}' not in mas_list.stdout"
      tags: ['setup'] 
      
    - name: Upgrade all apps (if configured).
      command: mas upgrade
      when: mas_upgrade_all_apps   
      tags: ['setup'] 
##################################################################################################################
    - name: Enable bash4 in /etc/shells
      shell: sudo /bin/sh -c 'grep -q "path" /etc/shells || echo "{{ zsh_path }}" >> /etc/shells'
      when: current_shell.stdout != '/usr/local/bin/zsh'    
      #" unbreak my syntax highlighting...

    - name: Set zsh as default shell
      shell: chsh -s {{ zsh_path }}
      when: current_shell.stdout != '/usr/local/bin/zsh'
      sudo: true

       
    - name: Setup MacOS default configuration
      shell: /tmp/macSetup/macDefault.sh
      changed_when: false
      tags: ['setup']
      
    - name: Install global NPM packages.
      npm:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        global: yes
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ npm_packages }}"
      tags: ['dev'] 
      
    - name: Install global Pip packages.
      pip:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ pip_packages }}"
      tags: ['dev'] 
      
      
    - name: Run Little Snitch Installer
      shell: open /opt/homebrew-cask/Caskroom/little-snitch/3.5.3/Little\ Snitch\ Installer.app
      when: "'little-snitch' in applications"

    - name: Run Monolingual
      shell: open ~/Applications/Monolingual.app
      when: "'monolingual' in applications"

    - name: Install global Ruby gems.
      gem:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        user_install: no
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ gem_packages }}"
      tags: ['dev'] 